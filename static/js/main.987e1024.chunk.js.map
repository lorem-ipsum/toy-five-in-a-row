{"version":3,"sources":["components/Chess.js","components/Chesses.js","components/UseMousePosition.js","components/FakeChess.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Chess","size","x","y","color","trsp","width","height","style","position","left","top","zIndex","pointerEvents","cx","cy","r","stroke","strokeWidth","fill","opacity","Chesses","board","num","map","c","index","key","Math","floor","useMousePosition","useState","xm","ym","setPosition","useEffect","updateMouse","e","pageX","pageY","document","addEventListener","removeEventListener","FakeChess","i","j","x0","y0","winner","step","Board","setWinner","setStep","Array","setBoard","set0","canvasRef","useRef","ijToN","canvas","current","getBoundingClientRect","window","pageXOffset","pageYOffset","ctx","getContext","strokeRect","margin","padding","className","ref","onClick","next","calculateWinner","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.987e1024.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Chess({ size, x, y, color, trsp = false }) {\n  return (\n    <svg\n      width={size}\n      height={size}\n      style={{\n        position: \"absolute\",\n        left: size * x + \"px\",\n        top: size * y + \"px\",\n        zIndex: 10,\n        pointerEvents: \"none\",\n      }}\n    >\n      <circle\n        cx={size / 2}\n        cy={size / 2}\n        r={size / 3}\n        stroke=\"black\"\n        strokeWidth=\"2\"\n        fill={color}\n        opacity={trsp ? 0.5 : 1}\n      />\n    </svg>\n  );\n}\n\nexport default Chess;\n","import React from \"react\";\nimport Chess from \"./Chess\";\n\nfunction Chesses({ board, size, num }) {\n  return board.map(\n    (c, index) =>\n      c && (\n        <Chess\n          key={index}\n          size={size}\n          x={index % num}\n          y={Math.floor(index / num)}\n          color={c}\n        />\n      )\n  );\n}\n\nexport default Chesses;\n","import { useState, useEffect } from \"react\";\n\n// useMousePosition Hook\nfunction useMousePosition() {\n  const [position, setPosition] = useState({ xm: 0, ym: 0 });\n  useEffect(() => {\n    const updateMouse = (e) => {\n      setPosition({ xm: e.pageX, ym: e.pageY });\n    };\n    document.addEventListener(\"mousemove\", updateMouse);\n    document.addEventListener(\"onscroll\", updateMouse);\n    return () => {\n      document.removeEventListener(\"mousemove\", updateMouse);\n      document.removeEventListener(\"onscroll\", updateMouse);\n    };\n  });\n\n  return position;\n}\n\nexport default useMousePosition;\n","import React from \"react\";\nimport Chess from \"./Chess\";\nimport useMousePosition from \"./UseMousePosition\";\n\nfunction FakeChess({ size, num, x0, y0, board, winner, step }) {\n  let { xm, ym } = useMousePosition();\n\n  function ijToN(i, j) {\n    return i + j * num;\n  }\n\n  return (\n    0 <= Math.floor((xm - x0) / size) &&\n    Math.floor((xm - x0) / size) < num &&\n    0 <= Math.floor((ym - y0) / size) &&\n    Math.floor((ym - y0) / size) < num &&\n    board[ijToN(Math.floor((xm - x0) / size), Math.floor((ym - y0) / size))] ===\n      null &&\n    winner === null && (\n      <Chess\n        size={size}\n        x={Math.floor((xm - x0) / size)}\n        y={Math.floor((ym - y0) / size)}\n        color={step % 2 === 0 ? \"black\" : \"white\"}\n        trsp={true}\n      />\n    )\n  );\n}\n\nexport default FakeChess;\n","import React, { useState, useEffect, useRef } from \"react\";\n// import Chess from \"./Chess\";\nimport Chesses from \"./Chesses\";\nimport FakeChess from \"./FakeChess\";\n\n// import useMousePosition from \"./UseMousePosition\";\n\nfunction Board({ num, size }) {\n  let [winner, setWinner] = useState(null);\n  let [step, setStep] = useState(0);\n  let [board, setBoard] = useState(new Array(num * num).fill(null));\n  // TEST\n  // console.log(\"start*****************************\");\n  let [{ x0, y0 }, set0] = useState({});\n  // let { xm, ym } = useMousePosition();\n  const canvasRef = useRef(null);\n\n  // Draw the board.\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const x0 = canvas.getBoundingClientRect().left + window.pageXOffset;\n    const y0 = canvas.getBoundingClientRect().top + window.pageYOffset;\n    set0({ x0, y0 });\n\n    const ctx = canvas.getContext(\"2d\");\n    for (let i = 0; i < num - 1; ++i) {\n      for (let j = 0; j < num - 1; ++j) {\n        ctx.strokeRect(i * size + size / 2, j * size + size / 2, size, size);\n      }\n    }\n    ctx.strokeRect(size / 2, size / 2, (num - 1) * size, (num - 1) * size);\n    ctx.strokeRect(\n      size / 2 - 5,\n      size / 2 - 5,\n      (num - 1) * size + 10,\n      (num - 1) * size + 10\n    );\n  }, [num, size]);\n\n  // useEffect(() => {\n  //   const canvas = canvasRef.current;\n  //   const x0 = canvas.getBoundingClientRect().left + window.pageXOffset;\n  //   const y0 = canvas.getBoundingClientRect().top + window.pageYOffset;\n  //   set0({ x0, y0 });\n  // }, [xm, ym]);\n\n  // TODO: 判断胜负部分最终应当由后端来完成\n  function calculateWinner() {\n    if (num < 5) return null;\n    for (let i = 0; i < num; ++i) {\n      for (let j = 0; j < num; ++j) {\n        if (\n          i <= num - 5 &&\n          board[ijToN(i, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 1, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 2, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 3, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 4, j)]\n        )\n          return board[ijToN(i, j)];\n        else if (\n          j <= num - 5 &&\n          board[ijToN(i, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i, j + 1)] &&\n          board[ijToN(i, j)] === board[ijToN(i, j + 2)] &&\n          board[ijToN(i, j)] === board[ijToN(i, j + 3)] &&\n          board[ijToN(i, j)] === board[ijToN(i, j + 4)]\n        )\n          return board[ijToN(i, j)];\n        else if (\n          i <= num - 5 &&\n          j <= num - 5 &&\n          board[ijToN(i, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 1, j + 1)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 2, j + 2)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 3, j + 3)] &&\n          board[ijToN(i, j)] === board[ijToN(i + 4, j + 4)]\n        )\n          return board[ijToN(i, j)];\n        else if (\n          i >= 4 &&\n          j <= num - 5 &&\n          board[ijToN(i, j)] &&\n          board[ijToN(i, j)] === board[ijToN(i - 1, j + 1)] &&\n          board[ijToN(i, j)] === board[ijToN(i - 2, j + 2)] &&\n          board[ijToN(i, j)] === board[ijToN(i - 3, j + 3)] &&\n          board[ijToN(i, j)] === board[ijToN(i - 4, j + 4)]\n        )\n          return board[ijToN(i, j)];\n      }\n    }\n    return null;\n  }\n\n  function ijToN(i, j) {\n    return i + j * num;\n  }\n\n  // put a chess\n  function handleClick(e) {\n    let i = Math.floor((e.pageX - x0) / size);\n    let j = Math.floor((e.pageY - y0) / size);\n    if (winner || board[ijToN(i, j)]) return;\n    const next = step % 2 === 0 ? \"black\" : \"white\";\n    setBoard(board.fill(next, ijToN(i, j), ijToN(i, j) + 1));\n    setWinner(calculateWinner());\n    setStep(step + 1);\n  }\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {/* <p>\n        The board is {num} * {num}.\n        <br />\n        The coordinate of the lefttop point of CANVAS is ({x0}, {y0}) The\n        coordinate of the mouse is ({xm}, {ym})\n      </p> */}\n      <h2>\n        Result:{\" \"}\n        {winner ? \"The winner is \" + winner : step === num * num ? \"tie\" : \"?\"}\n      </h2>\n      <div\n        style={{ margin: 0, padding: 0, position: \"absolute\" }}\n        className=\"canvas-wrapper\"\n      >\n        <canvas\n          ref={canvasRef}\n          width={num * size}\n          height={num * size}\n          onClick={handleClick}\n        />\n        <Chesses board={board} size={size} num={num} />\n\n        <FakeChess\n          size={size}\n          num={num}\n          x0={x0}\n          y0={y0}\n          board={board}\n          winner={winner}\n          step={step}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./components/Board\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <h1>Five in a row</h1>\n      <Board num={13} size={40} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}